function popup(event, topic){
    // Create popup window for news articles for the current hashtag on the selected date - AJM

	var text = event.childNodes[0].firstChild.nodeValue;
	var newsDate = text.substring(11,13) + "/" + text.substring(14,16) + "/" + text.substring(8,10); 

	var url = "https://www.google.com/search?pz=1&cf=all&ned=us&hl=en&tbm=nws&gl=us&as_q="+topic+"&as_occt=any&as_drrb=b&as_mindate="+newsDate+"&as_maxdate="+newsDate+"&tbs=cdr%3A1%2Ccd_min%3A"+newsDate+"%2Ccd_max%3A"+newsDate+"&authuser=0"

	var left = (screen.width/2)-(675/2);
	var top = (screen.height/2)-(400/2);

	window.open (url, "mywindow","location=1,status=1,scrollbars=1, width=675,height=400,left="+left+",top="+top+"");

}


var margin = {top: 5, right: 20, bottom: 20, left: 140},
    width = 250 - margin.right - margin.left, // width
    height = 1350 - margin.top - margin.bottom, // height
    cellSize = 25; // cell size

var day = d3.time.format("%w"),
    week = d3.time.format("%U"),
    percent = d3.format(".1%"),
    format = d3.time.format("%Y-%m-%d");

var color = d3.scale.quantize()
    .domain([minValue, maxValue])  // Sets color ranges specific to the data, defined in PHP - AJM
    .range(d3.range(10)); // Sets number of color gradients - AJM


var svg = d3.select("#chart").selectAll("svg")
    .data(d3.range(2012, 2013))
  .enter().append("svg")
    .attr("width", width + margin.right + margin.left)
    .attr("height", height + margin.top + margin.bottom)
    .attr("class", "RdBu")
  .append("g")
    .attr("transform","translate(15,15)");


//append the year - Tze
svg.append("text")
    .attr("transform", "translate(20," + -5 + ")rotate(0)")
    .attr("text-anchor", "middle")
    .text(String);


//Months, each height manually adjusted via the number between the two + sign - Tze
svg.append("text")
    .attr("transform", "translate(-6," + 60 + ")rotate(-90)")
    .attr("text-anchor", "middle")
    .text("Jan");

svg.append("text")
    .attr("transform", "translate(-6," + 160 + ")rotate(-90)")
    .attr("text-anchor", "middle")
    .text("Feb");

svg.append("text")
    .attr("transform", "translate(-6," + 260 + ")rotate(-90)")
    .attr("text-anchor", "middle")
    .text("Mar");

svg.append("text")
    .attr("transform", "translate(-6," + 385 + ")rotate(-90)")
    .attr("text-anchor", "middle")
    .text("Apr");

svg.append("text")
    .attr("transform", "translate(-6," + 485 + ")rotate(-90)")
    .attr("text-anchor", "middle")
    .text("May");

svg.append("text")
    .attr("transform", "translate(-6," + 585 + ")rotate(-90)")
    .attr("text-anchor", "middle")
    .text("Jun");

svg.append("text")
    .attr("transform", "translate(-6," + 715 + ")rotate(-90)")
    .attr("text-anchor", "middle")
    .text("Jul");

svg.append("text")
    .attr("transform", "translate(-6," + 815 + ")rotate(-90)")
    .attr("text-anchor", "middle")
    .text("Aug");

svg.append("text")
    .attr("transform", "translate(-6," + 915 + ")rotate(-90)")
    .attr("text-anchor", "middle")
    .text("Sep");

svg.append("text")
    .attr("transform", "translate(-6," + 1040 + ")rotate(-90)")
    .attr("text-anchor", "middle")
    .text("Oct");

svg.append("text")
    .attr("transform", "translate(-6," + 1140 + ")rotate(-90)")
    .attr("text-anchor", "middle")
    .text("Nov");

svg.append("text")
    .attr("transform", "translate(-6," + 1240 + ")rotate(-90)")
    .attr("text-anchor", "middle")
    .text("Dec");



var rect = svg.selectAll("rect.day")
    .data(function(d) { return d3.time.days(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })
  .enter().append("rect")
    .attr("class", "day")
    .attr("width", cellSize)
    .attr("height", cellSize)
    .attr("x", function(d) { return day(d) * cellSize; })
    .attr("y", function(d) { return week(d) * cellSize; })
    .datum(format);

rect.append("title")
    .text(function(d) { return d; });

svg.selectAll("path.month")
    .data(function(d) { return d3.time.months(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })
  .enter().append("path")
    .attr("class", "month")
    .attr("d", monthPath);


var data = d3.nest() // Assigns data dynamically generated by PHP to JS object used for this visualization - AJM
.key(function(d) { return d.date; })
.rollup(function(d) { return d[0].count; })
.map(dynamicData);  // Defined by PHP code - AJM


rect.filter(function(d) { return d in data; })
.attr("class", function(d) { return "day q" + color(data[d]) + "-10";  })
.attr("onclick", "popup(this, topic);") // Call popup function when clicked, pass event data and the current hash tag - AJM
.select("title")
.text(function(d) { return "Date: " + d + ", Count: " + data[d]; });

// CSS file provides border highlighting for mouseover hover, easier than doing so in SVG - AJM



//rotating?? - Tze, can't figure out how the month sort out,
//but monthPath use to draw monthe and the bacl lines in between?

function monthPath(t0) {
  var t1 = new Date(t0.getFullYear(), t0.getMonth() + 1, 0),
      d0 = +day(t0), w0 = +week(t0),
      d1 = +day(t1), w1 = +week(t1);
  return "M" + (d0) * cellSize + "," + (w0 + 1) * cellSize
      + "V" + w0 * cellSize 
      + "H" + 7 * cellSize
      + "V" + w1 * cellSize 
      + "H" + (d1 + 1) * cellSize
      + "V" + (w1 + 1) * cellSize 
      + "H" + 0
      + "V" + (w0 + 1) * cellSize 
      + "Z";
}


/*var legend = d3.select("#legend")
    .append("svg:svg")
    .attr("width", 200)
    .attr("height", 500)
    .attr("class", "RdBu");



for(var x = 0; x<10; x++){
    legend.append("svg:rect")
        .attr("x", 0)
        .attr("y", 25*x)
        .attr("height", 25)
        .attr("width", 150)
        .attr("class", "day q" + x + "-10");

    legend.selectAll("text")
        .append("svg:text")
        .attr("x", "25" )
        .attr("y",25*x+5 )
        .attr("text-anchor", "middle")
        .text("testing")
        .attr("fill", "red");
}*/

/*
var foo = [{year: 2006, books: 54},
    {year: 2007, books: 43},
    {year: 2008, books: 41},
    {year: 2009, books: 44},
    {year: 2010, books: 35}];

var barWidth = 40;
var width = (barWidth + 10) * foo.length;
var height = 200;

var x = d3.scale.linear().domain([0, foo.length]).range([0, width]);
var y = d3.scale.linear().domain([0, d3.max(foo, function(datum) { return datum.books; })]).
    rangeRound([0, height]);

// add the canvas to the DOM
var barDemo = d3.select("#legend").
    append("svg:svg").
    attr("width", width).
    attr("height", height);

barDemo.selectAll("rect").
    data(foo).
    enter().
    append("svg:rect").
    attr("x", function(datum, index) { return x(index); }).
    attr("y", function(datum) { return height - y(datum.books); }).
    attr("height", function(datum) { return y(datum.books); }).
    attr("width", barWidth).
    attr("fill", "#2d578b");

barDemo.selectAll("text").
    data(foo).
    enter().
    append("svg:text").
    attr("x", function(datum, index) { return x(index) + barWidth; }).
    attr("y", function(datum) { return height - y(datum.books); }).
    attr("dx", -barWidth/2).
    attr("dy", "1.2em").
    attr("text-anchor", "middle").
    text(function(datum) { return datum.books;}).
    attr("fill", "white");
*/

var testing = [{id:0, range:"asdf-asdf"},
    {id:1, range:"asdf-asdf"},
    {id:2, range:"asdf-asdf"},
    {id:3, range:"asdf-asdf"},
    {id:4, range:"asdf-asdf"},
    {id:5, range:"asdf-asdf"},
    {id:6, range:"asdf-asdf"},
    {id:7, range:"asdf-asdf"},
    {id:8, range:"asdf-asdf"},
    {id:9, range:"asdf-asdf"}];

var legend = d3.select("#legend")
    .append("svg:svg")
    .attr("width", 200)
    .attr("height", 500)
    .attr("class", "RdBu")
    .append("g")
    .attr("transform","translate(15,15)");




legend.selectAll("rect")
    .data(legendData)
    .enter()
    .append("svg:rect")
    .attr("x", 0)
    .attr("y", function(d) { return 20* d.id; })
    .attr("height", 20)
    .attr("width", 95)
    .attr("class", function(d) { return "day q" + d.id + "-10"; });

legend.selectAll("text")
    .data(legendData)
    .enter()
    .append("svg:text")
    .attr("x", 10)
    .attr("y", function(d) { return 20* d.id; })
    .attr("dy", "1.2em")
    .text(function(d) { return d.range;})
    .attr("fill", "white");

legend.append("text")
    .attr("transform", "translate(20," + -5 + ")rotate(0)")
    .attr("text-anchor", "middle")
    .text("Legend")
